//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudStoreApp.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TextResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TextResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CloudStoreApp.Resources.TextResources", typeof(TextResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during import: Unable to re-establish junction between source and target directories, as both directories already exist. Remove either directory, then store the folder again manually..
        /// </summary>
        internal static string BothPhysicalDirectoriesExistIOException {
            get {
                return ResourceManager.GetString("BothPhysicalDirectoriesExistIOException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Missing preference for Cloud Storage Path. Make sure to set this setting before using any other features of the application..
        /// </summary>
        internal static string MissingCloudStoragePath {
            get {
                return ResourceManager.GetString("MissingCloudStoragePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during import: A reparse point already exists for the source directory, but the target directory doesn&apos;t exist. You should manually remove the source directory folder, and then store the folder again once it has been created..
        /// </summary>
        internal static string ReparsePointExistsWithoutTargetDirectory {
            get {
                return ResourceManager.GetString("ReparsePointExistsWithoutTargetDirectory", resourceCulture);
            }
        }
    }
}
